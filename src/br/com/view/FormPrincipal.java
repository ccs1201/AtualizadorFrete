/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.view;

import br.com.model.Usuario;
import java.awt.event.ActionEvent;

/**
 *
 * @author Cleber
 */
public class FormPrincipal extends javax.swing.JFrame {

    Usuario usuario;

    /**
     * Creates new form FormPrincipal
     */
    public FormPrincipal(Usuario usuario) {
        this.usuario = usuario;

        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.habilitaMenuConfiguracao();
        this.setTitle("Atualizador de Frete 1.3");
        setVisible(true);
    }

    public FormPrincipal() {

        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setTitle("Atualizador de Frete 1.3");
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuSisTema = new javax.swing.JMenu();
        mItemAtualizarFreteAvancado = new javax.swing.JMenuItem();
        mItemFretePadrao = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        miImportarNFe = new javax.swing.JMenuItem();
        mItemSair = new javax.swing.JMenuItem();
        menuCadastros = new javax.swing.JMenu();
        mitemCadUsuario = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mitemCliente = new javax.swing.JMenuItem();
        mitenDestinatario = new javax.swing.JMenuItem();
        menuConfiguracao = new javax.swing.JMenu();
        itemConexaBanco = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuSisTema.setText("Sistema");
        menuSisTema.setToolTipText("Opções do Sistema");
        menuSisTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSisTemaActionPerformed(evt);
            }
        });

        mItemAtualizarFreteAvancado.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        mItemAtualizarFreteAvancado.setText("Atualizar Frete Avançado");
        mItemAtualizarFreteAvancado.setToolTipText("");
        mItemAtualizarFreteAvancado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemAtualizarFreteAvancadoActionPerformed(evt);
            }
        });
        menuSisTema.add(mItemAtualizarFreteAvancado);

        mItemFretePadrao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        mItemFretePadrao.setText("Atualizar Frete Padrão");
        mItemFretePadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemFretePadraoActionPerformed(evt);
            }
        });
        menuSisTema.add(mItemFretePadrao);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Atualizar Frete por Região");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuSisTema.add(jMenuItem1);

        miImportarNFe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        miImportarNFe.setText("Importar Arquivos NFe");
        miImportarNFe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miImportarNFeActionPerformed(evt);
            }
        });
        menuSisTema.add(miImportarNFe);

        mItemSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        mItemSair.setText("Sair");
        mItemSair.setToolTipText("Encerra o Sistema.");
        mItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemSairActionPerformed(evt);
            }
        });
        menuSisTema.add(mItemSair);

        jMenuBar1.add(menuSisTema);

        menuCadastros.setText("Cadastros");
        menuCadastros.setToolTipText("");

        mitemCadUsuario.setText("Usuarios");
        mitemCadUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemCadUsuarioActionPerformed(evt);
            }
        });
        menuCadastros.add(mitemCadUsuario);

        jMenuBar1.add(menuCadastros);

        jMenu1.setText("Consultas");

        mitemCliente.setText("Clientes");
        mitemCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemClienteActionPerformed(evt);
            }
        });
        jMenu1.add(mitemCliente);

        mitenDestinatario.setText("Destinatarios");
        mitenDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitenDestinatarioActionPerformed(evt);
            }
        });
        jMenu1.add(mitenDestinatario);

        jMenuBar1.add(jMenu1);

        menuConfiguracao.setText("Configurações");
        menuConfiguracao.setEnabled(false);

        itemConexaBanco.setText("Conexão com Banco");
        itemConexaBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConexaBancoActionPerformed(evt);
            }
        });
        menuConfiguracao.add(itemConexaBanco);

        jMenuBar1.add(menuConfiguracao);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemSairActionPerformed
        // TODO add your handling code here:
        sair(evt);
    }//GEN-LAST:event_mItemSairActionPerformed

    private void menuSisTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSisTemaActionPerformed
    }//GEN-LAST:event_menuSisTemaActionPerformed

    private void mItemAtualizarFreteAvancadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemAtualizarFreteAvancadoActionPerformed

        FormAtualizaFrete formAtualizaFrete = new FormAtualizaFrete();

    }//GEN-LAST:event_mItemAtualizarFreteAvancadoActionPerformed

    private void mitemCadUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemCadUsuarioActionPerformed
        FormCadUsuario formCadUsuario = new FormCadUsuario();
    }//GEN-LAST:event_mitemCadUsuarioActionPerformed

    private void mItemFretePadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemFretePadraoActionPerformed
        FormAtualizarFretePadrao formAtualizarFretePadrao = new FormAtualizarFretePadrao();
    }//GEN-LAST:event_mItemFretePadraoActionPerformed

    private void mitenDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitenDestinatarioActionPerformed
        FormConsultaDestinatario formListaDestinatario = new FormConsultaDestinatario();
    }//GEN-LAST:event_mitenDestinatarioActionPerformed

    private void mitemClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemClienteActionPerformed
        FormConsultaClientes formListaClientes = new FormConsultaClientes();
    }//GEN-LAST:event_mitemClienteActionPerformed

    private void itemConexaBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConexaBancoActionPerformed
        FormCadProporties proporties = new FormCadProporties();
    }//GEN-LAST:event_itemConexaBancoActionPerformed

    private void miImportarNFeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miImportarNFeActionPerformed
        FormImportaXML importar = new FormImportaXML();
    }//GEN-LAST:event_miImportarNFeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        FormAtualizaFreteRegiao freteRegiao = new FormAtualizaFreteRegiao();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemConexaBanco;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem mItemAtualizarFreteAvancado;
    private javax.swing.JMenuItem mItemFretePadrao;
    private javax.swing.JMenuItem mItemSair;
    private javax.swing.JMenu menuCadastros;
    private javax.swing.JMenu menuConfiguracao;
    private javax.swing.JMenu menuSisTema;
    private javax.swing.JMenuItem miImportarNFe;
    private javax.swing.JMenuItem mitemCadUsuario;
    private javax.swing.JMenuItem mitemCliente;
    private javax.swing.JMenuItem mitenDestinatario;
    // End of variables declaration//GEN-END:variables


    /*
     * Inicio dos eventos personalizados
     */
    private void sair(ActionEvent evt) {
        System.exit(0);
    }

    private void habilitaMenuConfiguracao() {
        if (usuario.getLogin().equalsIgnoreCase("super") && usuario.getSenha().equalsIgnoreCase("root")) {
            menuConfiguracao.setEnabled(true);
        }

    }
}
